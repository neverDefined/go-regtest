name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test (Go ${{ matrix.go-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ['1.23', '1.24']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Install Bitcoin Core
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          # Use snap for reliable installation across Ubuntu versions
          sudo snap install bitcoin-core
          # Create symlinks for standard paths
          sudo ln -sf /snap/bitcoin-core/current/bin/bitcoind /usr/local/bin/bitcoind
          sudo ln -sf /snap/bitcoin-core/current/bin/bitcoin-cli /usr/local/bin/bitcoin-cli
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install bitcoin
        fi
      shell: bash

    - name: Verify Bitcoin Core installation
      run: |
        which bitcoind
        bitcoind --version

    - name: Install development tools
      run: make install-tools

    - name: Run CI checks
      run: make ci

    - name: Generate coverage report
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.23'
      run: |
        echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        go tool cover -func=coverage.out >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Coverage Percentage" >> $GITHUB_STEP_SUMMARY
        COVERAGE=$(go tool cover -func=coverage.out | tail -1 | awk '{print $3}' | sed 's/%//')
        echo "**Total Coverage: ${COVERAGE}%**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Coverage Threshold Check" >> $GITHUB_STEP_SUMMARY
        COVERAGE_INT=$(echo "$COVERAGE" | cut -d. -f1)
        if [ "$COVERAGE_INT" -lt 70 ]; then
          echo "FAIL: **Coverage ${COVERAGE}% is below 70% threshold**" >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "PASS: **Coverage ${COVERAGE}% meets 70% threshold**" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload coverage artifacts
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.23'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-go${{ matrix.go-version }}
        path: |
          coverage.out
          coverage.html
        retention-days: 30

